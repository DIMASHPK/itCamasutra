{"version":3,"sources":["components/hoc/AuthRedirect.jsx","assets/user.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx"],"names":["mapStateToProps","_ref","isAuth","authReducer","withAuthRedirectHOC","Component","AuthRedirectHOC","_React$Component","Object","D_web_1_master_web_1_master_react_way_of_samurai_itCamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","D_web_1_master_web_1_master_react_way_of_samurai_itCamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__","D_web_1_master_web_1_master_react_way_of_samurai_itCamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","apply","arguments","D_web_1_master_web_1_master_react_way_of_samurai_itCamasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","module","exports","__webpack_require__","p","info","avatar","status","item","avatarWrap","like","addPost","Post","message","likesCount","isFetching","name","react_default","className","s","Prelodaer","src","alt","maxLengthPost","maxLength","reduxForm","form","handleSubmit","posts","profile","onSubmit","myPosts","bind","Field","component","TextArea","placeholder","rows","cols","validate","requiredField","map","i","MyPosts_Post_Post","post","fullName","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","unsupportedIterableToArray","TypeError","_nonIterableRest","ProfileStatusWithHooks","updateStatusThunkCreater","_React$useState2","useState","editMode","setEditMode","_React$useState4","myStatus","setMyStatus","deActivateEditMode","useEffect","autoFocus","onChange","_ref2","target","onKeyPress","_ref3","onBlur","onDoubleClick","ProfileInfo","srcPhoto","contacts","objectWithoutProperties","Fragment","dataOfUser","ProfileStatusWithHooks_ProfileStatusWithHooks","concat","lookingForAJob","aboutMe","contact","Profile","addPostActionCreater","reset","Profile_ProfileInfo_ProfileInfo","assign","Profile_MyPosts_MyPosts","newPost","ProfileContainer","_this$props","userId","match","params","getUserThunkCreater","getStatusThunkCreater","id","prevProps","prevState","snapshot","_this$props2","hasOwnProperty","entries","slice","components_Profile_Profile","photos","small","photo","mapDispatchToProps","compose","_ref$profile_reducer","profile_reducer","withRouter"],"mappings":"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","file":"static/js/4.9a3001a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = ({authReducer: {isAuth}}) => ({isAuth})\r\n\r\nexport const withAuthRedirectHOC = (Component) => {\r\n\r\n    class AuthRedirectHOC extends React.Component {\r\n        render() {\r\n            const {isAuth} = this.props\r\n\r\n            return !isAuth ? <Redirect to={'/login'}/> : <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthRedirectHOC)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.d9870e6d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__WYSwt\",\"avatar\":\"ProfileInfo_avatar__2EM9L\",\"status\":\"ProfileInfo_status__3JUzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1fFK5\",\"avatarWrap\":\"Post_avatarWrap__2-PJj\",\"like\":\"Post_like__1SVpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"MyPosts_addPost__125Ow\"};","import React from \"react\";\r\nimport Preloader from \"../../../common/Preloader/Prelodaer\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = ({ avatar, message, likesCount, isFetching, name }) => (\r\n  <div className={s.item}>\r\n    <div className={s.avatarWrap}>\r\n      {isFetching ? <Preloader /> : <img src={avatar} alt=\"avatr\" />}\r\n    </div>\r\n    <div>\r\n      <h4>{name}</h4>\r\n      <span className={s.message}>{message}</span>\r\n      <p className={s.like}>like {likesCount}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, requiredField} from \"../../../helpers/validators\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLengthPost = maxLength(10)\r\n\r\n\r\nconst MyPosts = ({\r\n                     handleSubmit,\r\n                     posts,\r\n                     avatar,\r\n                     isFetching,\r\n                     profile,\r\n                     onSubmit\r\n                 }) => (\r\n    <div className={s.myPosts}>\r\n        <h3>My posts</h3>\r\n        <form onSubmit={handleSubmit(onSubmit.bind(this))} className={s.addPost}>\r\n            <Field\r\n                component={TextArea}\r\n                name={'newPost'}\r\n                placeholder={'Your post'}\r\n                rows={3}\r\n                cols={60}\r\n                validate = {[requiredField, maxLengthPost]}\r\n            />\r\n            <button>\r\n                Add post\r\n            </button>\r\n        </form>\r\n        <div className={s.posts}>\r\n            {posts.map((item, i) => (\r\n                <Post\r\n                    message={item.post}\r\n                    likesCount={item.like}\r\n                    key={i}\r\n                    avatar={avatar}\r\n                    isFetching={isFetching}\r\n                    name={profile.fullName}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default reduxForm({form: 'posts'})(MyPosts);\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nexport const ProfileStatusWithHooks = ({status, updateStatusThunkCreater}) => {\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [myStatus, setMyStatus] = React.useState(status || 'my status')\r\n\r\n    const handleChange = ({target: {value}}) => setMyStatus(value)\r\n    const activateEditMode = () => setEditMode( true)\r\n    const deActivateEditMode = () => {\r\n        setEditMode( false)\r\n        updateStatusThunkCreater(myStatus)\r\n    }\r\n    const deActivateEditModeOnEnter = ({key}) => key === 'Enter' && deActivateEditMode()\r\n\r\n    React.useEffect(() => {\r\n        setMyStatus(status)\r\n    }, [status])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                (<div>\r\n                        <span\r\n                            className={s.status}\r\n                            onDoubleClick={activateEditMode}\r\n                        >\r\n                            {myStatus}\r\n                        </span>\r\n                </div>)\r\n                :\r\n                (<div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        className={s.status}\r\n                        value={myStatus}\r\n                        onChange={handleChange}\r\n                        onKeyPress={deActivateEditModeOnEnter}\r\n                        onBlur={deActivateEditMode}\r\n                    />\r\n                </div>)\r\n            }\r\n        </div>)\r\n}\r\n\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Prelodaer\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({ srcPhoto, profile, avatar, isFetching, contacts, ...props }) => (\r\n  <>\r\n    {isFetching ? (\r\n      <Preloader />\r\n    ) : (\r\n      <div>\r\n        <div>\r\n          <img src={srcPhoto} alt=\"wall\" />\r\n        </div>\r\n        <div className={s.info}>\r\n          <img className={s.avatar} src={avatar} alt=\"avatar\" />\r\n          <div className={s.dataOfUser}>\r\n            <h3>{profile.fullName}</h3>\r\n            <ProfileStatusWithHooks {...props}/>\r\n            <p>looking for a job: {`${profile.lookingForAJob}`}</p>\r\n            <p>About me: {`${!profile.aboutMe ? \"non\" : profile.aboutMe}`}</p>\r\n            <div className={\"contacts\"}>\r\n              {contacts &&\r\n                contacts.map((contact, i) => (\r\n                  <p key={i + 1}>\r\n                    {contact[0]}:{`${contact[1]}`}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = ({src, addPostActionCreater, reset, ...props}) => (\r\n    <div>\r\n        <ProfileInfo srcPhoto={src} {...props} />\r\n        <MyPosts onSubmit={({newPost}) => {\r\n            addPostActionCreater(newPost);\r\n            reset('posts')\r\n        }}{...props} />\r\n    </div>\r\n);\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport photo from \"../../assets/user.png\";\r\nimport {\r\n    addPostActionCreater,\r\n    getUserThunkCreater,\r\n    getStatusThunkCreater,\r\n    updateStatusThunkCreater\r\n} from \"../../redux/profileReducer\";\r\nimport { withAuthRedirectHOC} from \"../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {userId}\r\n            },\r\n            getUserThunkCreater,\r\n            getStatusThunkCreater,\r\n            id\r\n        } = this.props;\r\n\r\n        getUserThunkCreater(userId || id)\r\n        getStatusThunkCreater(userId|| id)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const {\r\n            match: {\r\n                params: {userId}\r\n            },\r\n            getUserThunkCreater,\r\n            id\r\n        } = this.props;\r\n\r\n        if(userId !== prevProps.match.params.userId){\r\n            getUserThunkCreater(id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {profile} = this.props;\r\n        let contacts =\r\n            profile.hasOwnProperty(\"contacts\") &&\r\n            Object.entries(profile.contacts).slice(0, 4);\r\n\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                avatar={\r\n                    !profile && !profile.photos.small ? profile.photos.small : photo\r\n                }\r\n                contacts={contacts}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = ({\r\n                           authReducer: {id},\r\n                           profile_reducer: {posts, src, profile, isFetching, status}\r\n                       }) => ({\r\n    posts,\r\n    src,\r\n    profile,\r\n    isFetching,\r\n    status,\r\n    id\r\n});\r\n\r\nlet mapDispatchToProps = {\r\n    addPostActionCreater,\r\n    getUserThunkCreater,\r\n    getStatusThunkCreater,\r\n    updateStatusThunkCreater,\r\n    reset\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirectHOC\r\n)\r\n(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}